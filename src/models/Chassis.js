/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { forwardRef, useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { useBox } from '@react-three/cannon'
import { useStore } from '../utils/store'

useGLTF.preload('/chassis-draco.glb')

const Chassis = forwardRef(({ args = [1.7, 1, 4], mass = 500, children, ...props }, ref) => {
  const { nodes, materials } = useGLTF('/chassis-draco.glb')
  const [, api] = useBox(() => ({ mass, args, allowSleep: false, onCollide: (e) => console.log('bonk', e.body.userData), ...props }), ref)

  const brake = useStore((state) => state.controls.brake)

  return (
    <group ref={ref} api={api} dispose={null}>
      <group scale={[0.4, 0.35, 2.2]}>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <mesh castShadow receiveShadow geometry={nodes.Mesh_0.geometry} material={materials['Material.001']} material-color="#e0b030" />
            <mesh geometry={nodes.Mesh_1.geometry} material={nodes.Mesh_1.material} />
            <mesh castShadow geometry={nodes.Mesh_2.geometry} material={materials['Material.003']} material-color="black" />
            <mesh geometry={nodes.Mesh_3.geometry} material={materials['Material.004']} material-color={brake ? 'black' : 'white'} />
            <mesh geometry={nodes.Mesh_4.geometry} material={materials['Material.005']} />
            <mesh geometry={nodes.Mesh_5.geometry} material={materials['Material.006']} />
            <mesh geometry={nodes.Mesh_6.geometry} material={nodes.Mesh_6.material} />
            <mesh geometry={nodes.Mesh_7.geometry} material={materials['Material.008']} />
          </group>
        </group>
      </group>
      {children}
    </group>
  )
})

export { Chassis }
